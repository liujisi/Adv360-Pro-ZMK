/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define LAYER_DEFAULT 0
#define LAYER_KEYPAD 1
#define LAYER_FN 2
#define LAYER_MOD 3
#define LAYER_MAC 4
#define LAYER_SYMBOL 5

/ {
    behaviors {
        #include "macros.dtsi"
        #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        blt: basic_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "BASIC_LAYER_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL     &kp N1     &kp N2    &kp N3            &kp N4     &kp N5  &tog LAYER_KEYPAD                                                       &mo LAYER_MOD   &kp N6  &kp N7    &kp N8             &kp N9    &kp N0    &kp MINUS
&kp TAB       &kp Q      &kp W     &kp E             &kp R      &kp T   &none                                                                   &tog LAYER_MAC  &kp Y   &kp U     &kp I              &kp O     &kp P     &kp BSLH
&kp ESC       &kp A      &blt LAYER_SYMBOL S   &hm LEFT_SHIFT D  &kp F      &kp G   &none              &kp LCTRL  &kp LALT            &kp LGUI   &kp RCTRL  &none           &kp H   &kp J     &hm RIGHT_SHIFT K  &blt 5 L   &kp SEMI  &kp SQT
&kp LSHFT     &kp Z      &kp X     &kp C             &kp V      &kp B                                 &kp UNDERSCORE      &kp PG_UP                             &kp N   &kp M     &kp COMMA          &kp DOT   &kp FSLH  &kp RSHFT
&mo LAYER_FN  &kp GRAVE  &kp CAPS  &kp LEFT          &kp RIGHT          &kp BSPC           &kp DEL    &kp EQUAL           &kp PG_DN  &kp ENTER  &kp SPACE               &kp DOWN  &kp UP             &kp LBKT  &kp RBKT  &mo LAYER_FN
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                 &trans     &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                  &trans     &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &trans   &trans        &trans     &trans     &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                      &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&trans     &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL  &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &trans
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog LAYER_KEYPAD                                        &trans  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                                    &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none              &trans  &trans        &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                             &kp HOME      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans             &trans  &kp END       &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_mac {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                                            &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                                            &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT_COMMAND  &kp LEFT_ALT      &kp RIGHT_CONTROL  &kp RIGHT_COMMAND  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                            &trans            &trans                                        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans            &trans            &trans             &trans             &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_symbol {
            bindings = <
&trans  &trans           &kp AT_SIGN           &kp HASH               &trans             &trans        &trans                                      &trans  &trans  &trans            &trans             &trans  &trans  &trans
&trans  &kp TILDE        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOUBLE_QUOTES  &kp PERCENT   &trans                                      &trans  &trans  &kp AMPS          &trans             &trans  &trans  &trans
&trans  &kp EXCLAMATION  &kp DOLLAR            &kp PLUS               &kp COLON          &kp ASTERISK  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans  &trans  &trans
&trans  &kp LESS_THAN    &kp PIPE              &kp MINUS              &kp GREATER_THAN   &kp CARET                     &trans      &trans                  &trans  &kp LEFT_BRACE    &kp RIGHT_BRACE    &trans  &trans  &trans
&trans  &trans           &trans                &trans                 &trans                           &trans  &trans  &trans      &trans  &trans  &trans          &trans            &trans             &trans  &trans  &trans
            >;
        };
    };
};
